;;; -*- Mode:LISP; Package:ZWEI; Base:10; Readtable:CL -*-

(defpackage "GNU"
  :use ())

;;from data.c
(deff gnu:eq #'eq)
(deff gnu:eql #'eql)
(deff gnu:null #'null)
(deff gnu:not #'not)
(deff gnu:listp #'listp)
(deff gnu:nlistp #'nlistp)
(deff gnu:consp #'consp)
(deff gnu:atom #'atom)
(deff gnu:integerp #'integerp)
(deff gnu:numberp #'numberp)
(deff gnu:natnump #'natnump)
(deff gnu:symbolp #'symbolp)
(deff gnu:stringp #'stringp)
(deff gnu:vectorp #'vectorp)
(deff gnu:arrayp #'arrayp)
;(deff gnu:sequencep #'sequencep)
;(deff gnu:bufferp #'bufferp)
;(deff gnu:markerp #'markerp)
;(deff gnu:integer_or_marker_p #'integer_or_marker_p)
;(deff gnu:subrp #'subrp)
;(deff gnu:char_or_string_p #'char_or_string_p)
(deff gnu:car #'car)
(deff gnu:cdr #'cdr)
(deff gnu:car_safe #'car-safe)
(deff gnu:cdr_safe #'cdr-safe)
(deff gnu:setcar #'setcar)
(deff gnu:rplaca #'rplaca)
(deff gnu:rplacd #'rplacd)
(deff gnu:setcdr #'setcdr)
(deff gnu:symbol_function #'symbol-function)
(deff gnu:symbol_plist #'symbol-plist)
(deff gnu:symbol_name #'symbol-name)
(deff gnu:makunbound #'makunbound)
(deff gnu:fmakunbound #'fmakunbound)
(deff gnu:boundp #'boundp)
(deff gnu:fboundp #'fboundp)
(deff gnu:fset #'fset)
(deff gnu:setplist #'setplist)
(deff gnu:symbol_value #'symbol-value)
(deff gnu:set #'set)
;(deff gnu:default_value #'default-value)
;(deff gnu:set_default #'set_default)
;(deff gnu:make_variable_buffer_local #'make_variable_buffer_local)
;(deff gnu:make_local_variable #'make_local_variable)
;(deff gnu:kill_local_variable #'kill_local_variable)
(deff gnu:aref #'aref)
(deff gnu:aset #'aset)
;(deff gnu:int_to_string #'int_to_string)
;(deff gnu:string_to_int #'string_to_int)
;(deff gnu:eqlsign #'eqlsign)
;(deff gnu:lss #'lss)
;(deff gnu:gtr #'gtr)
;(deff gnu:leq #'leq)
;(deff gnu:geq #'geq)
;(deff gnu:neq #'neq)
(deff gnu:zerop #'zerop)
(deff gnu:plus #'plus)
(deff gnu:minus #'minus)
(deff gnu:times #'times)
;(deff gnu:quo #'quo)
(deff gnu:rem #'rem)
(deff gnu:max #'max)
(deff gnu:min #'min)
(deff gnu:logand #'logand)
(deff gnu:logior #'logior)
(deff gnu:logxor #'logxor)
(deff gnu:lsh #'lsh)
(deff gnu:ash #'ash)
(deff gnu:add1 #'add1)
(deff gnu:sub1 #'sub1)
(deff gnu:lognot #'lognot)
