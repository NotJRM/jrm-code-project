<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="Lisp">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.35\Xml\FxCopReport.Xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/../../Program Files/Reference Assemblies/Microsoft/Framework/v3.5/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/bin/Debug/Jrm.Lisp.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Targets>
   <Target Name="$(ProjectDir)/bin/Debug/Jrm.Lisp.dll">
    <Modules>
     <Module Name="jrm.lisp.dll">
      <Messages>
       <Message Id="Jrm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
        <Issue Name="Assembly">
         <Item>Jrm</Item>
         <Item>'Jrm.Lisp.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Lisp">
        <Types>
         <Type Name="Arity">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2007-10-31 03:51:56Z">
            <Issue>
             <Item>'Arity'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#QuoteAndRest">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-10-31 03:51:56Z">
              <Issue>
               <Item>'Arity.QuoteAndRest'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CL">
          <Members>
           <Member Name="#Append`1(System.Object[])">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.Append&lt;T&gt;(params object[])'</Item>
               <Item>'T'</Item>
              </Issue>
             </Message>
             <Message Id="arglist" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Append&lt;T&gt;(params object[])'</Item>
               <Item>arglist</Item>
               <Item>'arglist'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Cddr(Lisp.Cons)">
            <Messages>
             <Message Id="Cddr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Cddr</Item>
               <Item>'CL.Cddr(Cons)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Cddr(System.Object)">
            <Messages>
             <Message Id="Cddr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Cddr</Item>
               <Item>'CL.Cddr(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Environment">
            <Accessors>
             <Accessor Name="#set_Environment(Lisp.Environment)">
              <Messages>
               <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-10-05 18:09:46Z">
                <Issue>
                 <Item>'CL.Environment.set(Environment)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Eval(System.Object)">
            <Messages>
             <Message Id="Eval" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Eval</Item>
               <Item>'CL.Eval(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Length(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2008-02-17 21:58:49Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'CL.Length(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Mapcar`2(System.Object,System.Collections.Generic.ICollection`1&lt;!!1&gt;)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2008-02-17 21:58:49Z">
              <Issue>
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
               <Item>'O'</Item>
              </Issue>
             </Message>
             <Message Id="I" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z" FixCategory="NonBreaking">
              <Issue Name="MethodTypeParameterMoreMeaningfulName">
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
               <Item>'I'</Item>
              </Issue>
             </Message>
             <Message Id="Mapcar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Mapcar</Item>
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
              </Issue>
             </Message>
             <Message Id="O" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z" FixCategory="NonBreaking">
              <Issue Name="MethodTypeParameterMoreMeaningfulName">
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
               <Item>'O'</Item>
              </Issue>
             </Message>
             <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Created="2008-02-17 21:58:49Z" FixCategory="NonBreaking">
              <Issue Name="MethodTypeParameter">
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
               <Item>'I'</Item>
              </Issue>
              <Issue Name="MethodTypeParameter">
               <Item>'CL.Mapcar&lt;O, I&gt;(object, ICollection&lt;I&gt;)'</Item>
               <Item>'O'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapCollectionToList1`1(System.Object,System.Collections.ICollection)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.MapCollectionToList1&lt;T&gt;(object, ICollection)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapForEffect`2(System.Object,System.Object[])">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-18 00:34:45Z">
              <Issue>
               <Item>'CL.MapForEffect&lt;I, O&gt;(object, object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapListToList1`2(System.Object,Lisp.ConsCollection`1&lt;!!0&gt;)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.MapListToList1&lt;I, T&gt;(object, ConsCollection&lt;I&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapToList`2(System.Object,System.Object[])">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.MapToList&lt;I, T&gt;(object, object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapToList1`2(System.Object,System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.MapToList1&lt;I, T&gt;(object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MapVectorToList1`2(System.Object,!!0[])">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-31 02:42:15Z">
              <Issue>
               <Item>'CL.MapVectorToList1&lt;I, T&gt;(object, I[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position(System.Object,System.Object,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val1'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val1'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val2'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val1'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val2'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val3'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val1'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val2'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val3'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'CL.Position(object, object, object, object, object, object, object, object, object, object, object, object)'</Item>
               <Item>val</Item>
               <Item>'val4'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position`1(!!0,System.Collections.IList,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position&lt;TKey&gt;(TKey, IList, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Position`2(!!1,System.Collections.Generic.IList`1&lt;!!0&gt;,System.Object,System.Object)">
            <Messages>
             <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Position&lt;TItem, TKey&gt;(TKey, IList&lt;TItem&gt;, object, object)'</Item>
               <Item>val</Item>
               <Item>'val0'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Read(System.IO.TextReader,System.Boolean)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Read(TextReader, bool)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Read(System.IO.TextReader,System.Boolean,System.Object)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Read(TextReader, bool, object)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Read(TextReader, bool, object)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Read(System.IO.TextReader,System.Boolean,System.Object,System.Boolean)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Read(TextReader, bool, object, bool)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.Read(TextReader, bool, object, bool)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadFromString(System.String,System.Boolean)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadFromString(string, bool)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadFromString(System.String,System.Boolean,System.Object)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadFromString(string, bool, object)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadFromString(string, bool, object)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadFromString(System.String,System.Boolean,System.Object,System.Object[])">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadFromString(string, bool, object, params object[])'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadFromString(string, bool, object, params object[])'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPreservingWhitespace()">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'CL.ReadPreservingWhitespace()'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPreservingWhitespace(System.IO.TextReader)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'CL.ReadPreservingWhitespace(TextReader)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPreservingWhitespace(System.IO.TextReader,System.Boolean)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPreservingWhitespace(System.IO.TextReader,System.Boolean,System.Object)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPreservingWhitespace(System.IO.TextReader,System.Boolean,System.Object,System.Boolean)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object, bool)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object, bool)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'CL.ReadPreservingWhitespace(TextReader, bool, object, bool)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Readtable">
            <Messages>
             <Message Id="Readtable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Readtable</Item>
               <Item>'CL.Readtable'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Reconc(System.Object,System.Object)">
            <Messages>
             <Message Id="Reconc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Reconc</Item>
               <Item>'CL.Reconc(object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Reconc`1(System.Collections.Generic.IList`1&lt;!!0&gt;,Lisp.ConsCollection`1&lt;!!0&gt;)">
            <Messages>
             <Message Id="Reconc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Reconc</Item>
               <Item>'CL.Reconc&lt;T&gt;(IList&lt;T&gt;, ConsCollection&lt;T&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CLOS">
          <Members>
           <Member Name="#BootState">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.BootState'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BootstrapMetaBraid()">
            <Messages>
             <Message Id="SlotClassOriginalSlotCopy" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.BootstrapMetaBraid()'</Item>
               <Item>'SlotClassOriginalSlotCopy'</Item>
               <Item>'object[]'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#builtInEffectiveSlotDefinition">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.builtInEffectiveSlotDefinition'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#builtInSlotDefinition">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.builtInSlotDefinition'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EarlyCollectInheritance(Lisp.Symbol)">
            <Messages>
             <Message Id="cpl" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.EarlyCollectInheritance(Symbol)'</Item>
               <Item>'cpl'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindClass(Lisp.Symbol,System.Boolean,System.Object)">
            <Messages>
             <Message Id="isError" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2007-12-31 01:20:38Z" FixCategory="Breaking">
              <Issue>
               <Item>'isError'</Item>
               <Item>'CLOS.FindClass(Symbol, bool, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#function">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.function'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#genericFunctionApplicationCache">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-30 19:48:08Z">
              <Issue>
               <Item>'CLOS.genericFunctionApplicationCache'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#genericFunctionSingletonsList">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-30 19:48:08Z">
              <Issue>
               <Item>'CLOS.genericFunctionSingletonsList'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#initBraid">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.initBraid'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#initDefs">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.initDefs'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#initFixup">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'CLOS.initFixup'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#methodCombinationClass">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.methodCombinationClass'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#nullClass">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.nullClass'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#runtimeType">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.runtimeType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#setClassDirectSlots">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-10-31 03:51:56Z">
              <Issue>
               <Item>'CLOS.setClassDirectSlots'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#setClassDirectSuperclasses">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-10-31 03:51:56Z">
              <Issue>
               <Item>'CLOS.setClassDirectSuperclasses'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#setClassSlots">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-10-31 03:51:56Z">
              <Issue>
               <Item>'CLOS.setClassSlots'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#setGenericFunctionApplicationCache">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.setGenericFunctionApplicationCache'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#standardClassEqlSpecializer">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.standardClassEqlSpecializer'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#symbolClass">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'CLOS.symbolClass'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Cons">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2007-12-30 20:47:48Z">
            <Issue>
             <Item>'Cons'</Item>
             <Item>IList</Item>
            </Issue>
           </Message>
           <Message TypeName="ICollectionImplementationsHaveStronglyTypedMembers" Category="Microsoft.Design" CheckId="CA1035" Created="2007-10-14 19:33:04Z">
            <Issue>
             <Item>'Cons'</Item>
            </Issue>
           </Message>
           <Message TypeName="ListsAreStronglyTyped" Category="Microsoft.Design" CheckId="CA1039" Created="2007-10-31 03:51:56Z">
            <Issue>
             <Item>'Cons'</Item>
             <Item>Contains</Item>
            </Issue>
            <Issue>
             <Item>'Cons'</Item>
             <Item>IndexOf</Item>
            </Issue>
            <Issue>
             <Item>'Cons'</Item>
             <Item>Item</Item>
            </Issue>
           </Message>
           <Message TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058" Created="2008-02-17 21:58:49Z">
            <Issue Name="System.Collections.ReadOnlyCollectionBase">
             <Item>'Cons'</Item>
             <Item>'ReadOnlyCollectionBase'</Item>
            </Issue>
           </Message>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Excluded" Created="2007-10-14 16:47:26Z">
            <Issue>
             <Item>'Cons'</Item>
             <Item>Collection</Item>
            </Issue>
            <Notes>
             <User Name="jmarshall">
              <Note Id="0" />
             </User>
            </Notes>
           </Message>
          </Messages>
          <Members>
           <Member Name="#IsSynchronized">
            <Accessors>
             <Accessor Name="#get_IsSynchronized()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'Cons.IsSynchronized.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.Count">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_Count()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'Cons.ICollection.Count.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.IsSynchronized">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_IsSynchronized()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'Cons.ICollection.IsSynchronized.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.SyncRoot">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_SyncRoot()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'Cons.ICollection.SyncRoot.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="ConsCollection`1">
          <Members>
           <Member Name="#System.Collections.Generic.ICollection`1&lt;!0&gt;.Count">
            <Accessors>
             <Accessor Name="#System.Collections.Generic.ICollection`1&lt;!0&gt;.get_Count()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'ConsCollection&lt;T&gt;.ICollection&lt;T&gt;.Count.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.Count">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_Count()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'ConsCollection&lt;T&gt;.ICollection.Count.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.IsSynchronized">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_IsSynchronized()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'ConsCollection&lt;T&gt;.ICollection.IsSynchronized.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.Collections.ICollection.SyncRoot">
            <Accessors>
             <Accessor Name="#System.Collections.ICollection.get_SyncRoot()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2008-02-17 21:58:49Z" FixCategory="Breaking">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'ConsCollection&lt;T&gt;.ICollection.SyncRoot.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="ConsEnumerator">
          <Messages>
           <Message TypeName="EnumeratorsShouldBeStronglyTyped" Category="Microsoft.Design" CheckId="CA1038" Created="2007-10-14 16:47:26Z">
            <Issue>
             <Item>'ConsEnumerator'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="DotNet">
          <Messages>
           <Message Id="DotNet" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2008-02-17 21:58:49Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>DotNet</Item>
             <Item>'DotNet'</Item>
             <Item>Dotnet</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="EarlyClassDefinition">
          <Members>
           <Member Name="#name">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'EarlyClassDefinition.name'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Environment">
          <Members>
           <Member Name="#IsBound(Lisp.Symbol)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-10-05 18:09:46Z">
              <Issue>
               <Item>'Environment.IsBound(Symbol)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFbound(Lisp.Symbol)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-10-05 18:09:46Z">
              <Issue>
               <Item>'Environment.IsFbound(Symbol)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FindClassEntry">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2007-12-31 01:20:38Z">
            <Issue>
             <Item>'FindClassEntry'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#predicate">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-12-31 01:20:38Z">
              <Issue>
               <Item>'FindClassEntry.predicate'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Function1`1">
          <Messages>
           <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Created="2008-02-17 21:58:49Z" FixCategory="NonBreaking">
            <Issue Name="TypeTypeParameter">
             <Item>'Function1&lt;Tout&gt;'</Item>
             <Item>'Tout'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Function1`2">
          <Messages>
           <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Created="2008-02-17 21:58:49Z" FixCategory="NonBreaking">
            <Issue Name="TypeTypeParameter">
             <Item>'Function1&lt;Tout, Tin&gt;'</Item>
             <Item>'Tin'</Item>
            </Issue>
            <Issue Name="TypeTypeParameter">
             <Item>'Function1&lt;Tout, Tin&gt;'</Item>
             <Item>'Tout'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="KW">
          <Members>
           <Member Name="#CompileToplevel">
            <Messages>
             <Message Id="Toplevel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Toplevel</Item>
               <Item>'KW.CompileToplevel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LoadToplevel">
            <Messages>
             <Message Id="Toplevel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Toplevel</Item>
               <Item>'KW.LoadToplevel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#StudlyName">
            <Messages>
             <Message Id="Studly" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Studly</Item>
               <Item>'KW.StudlyName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ManifestInstance">
          <Members>
           <Member Name="#ObjectDebuggerDisplay">
            <Accessors>
             <Accessor Name="#get_ObjectDebuggerDisplay()">
              <Messages>
               <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2007-10-14 16:47:26Z">
                <Issue Name="Local">
                 <Item>'className'</Item>
                 <Item>'Symbol'</Item>
                 <Item>'ManifestInstance.ObjectDebuggerDisplay.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'className'</Item>
                 <Item>'string'</Item>
                 <Item>'ManifestInstance.ObjectDebuggerDisplay.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'instanceName'</Item>
                 <Item>'Symbol'</Item>
                 <Item>'ManifestInstance.ObjectDebuggerDisplay.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'instanceName'</Item>
                 <Item>'string'</Item>
                 <Item>'ManifestInstance.ObjectDebuggerDisplay.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="Package">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2007-10-05 18:09:46Z">
              <Issue>
               <Item>'Package'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ReaderContext">
          <Members>
           <Member Name="#.ctor(System.IO.TextReader,System.Boolean,System.Object)">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'ReaderContext.ReaderContext(TextReader, bool, object)'</Item>
               <Item>Eof</Item>
               <Item>'isEofError'</Item>
              </Issue>
             </Message>
             <Message Id="eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="MemberParameter">
               <Item>'ReaderContext.ReaderContext(TextReader, bool, object)'</Item>
               <Item>eof</Item>
               <Item>'eofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EofValue">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Eof</Item>
               <Item>'ReaderContext.EofValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsEofError">
            <Messages>
             <Message Id="Eof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Eof</Item>
               <Item>'ReaderContext.IsEofError'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Readtable">
          <Messages>
           <Message Id="Readtable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
            <Issue Name="Type">
             <Item>Readtable</Item>
             <Item>'Readtable'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#IsWhitespaceSyntax(System.Char)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'Readtable.IsWhitespaceSyntax(char)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ReadtableCase">
          <Messages>
           <Message Id="Readtable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
            <Issue Name="Type">
             <Item>Readtable</Item>
             <Item>'ReadtableCase'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Downcase">
            <Messages>
             <Message Id="Downcase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Downcase</Item>
               <Item>'ReadtableCase.Downcase'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Upcase">
            <Messages>
             <Message Id="Upcase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2008-02-17 21:58:49Z">
              <Issue Name="Member">
               <Item>Upcase</Item>
               <Item>'ReadtableCase.Upcase'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StringMatcher">
          <Members>
           <Member Name="#MatchesPackage(Lisp.Package)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-10-05 18:09:46Z">
              <Issue>
               <Item>'StringMatcher.MatchesPackage(Package)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Symbol">
          <Members>
           <Member Name="#NamesDotnetMethod()">
            <Messages>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2008-02-17 21:58:49Z">
              <Issue>
               <Item>'Symbol.NamesDotnetMethod()'</Item>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2008-02-17 21:58:49Z">
              <Issue>
               <Item>'Symbol.NamesDotnetMethod()'</Item>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SyntaxType">
          <Members>
           <Member Name="#Whitespace">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2007-10-05 18:09:46Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'SyntaxType.Whitespace'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Trampoline">
          <Members>
           <Member Name="#signature">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2007-10-14 16:47:26Z">
              <Issue>
               <Item>'Trampoline.signature'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Utility">
          <Members>
           <Member Name="#GetArg(System.Object,System.Object,System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-18 00:34:45Z">
              <Issue>
               <Item>'Utility.GetArg(object, object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetArgs(Lisp.Cons,System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-18 00:34:45Z">
              <Issue>
               <Item>'Utility.GetArgs(Cons, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetArgs(System.Object[],System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-10-31 03:51:56Z">
              <Issue>
               <Item>'Utility.GetArgs(object[], object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetArgs`1(Lisp.Cons,System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-30 21:01:19Z">
              <Issue>
               <Item>'Utility.GetArgs&lt;T&gt;(Cons, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetArgStar(System.Object,Lisp.ConsCollection`1&lt;Lisp.Symbol&gt;,System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-30 21:01:19Z">
              <Issue>
               <Item>'Utility.GetArgStar(object, ConsCollection&lt;Symbol&gt;, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Ignore(System.Object)">
            <Messages>
             <Message Id="x" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2007-10-05 18:09:46Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'x'</Item>
               <Item>'Utility.Ignore(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RemArgs(System.Object[],System.Object)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2007-12-29 00:18:45Z">
              <Issue>
               <Item>'Utility.RemArgs(object[], object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="jmarshall">
    <Note Id="0" Modified="2007-12-29 00:27:51Z">Cons is cons.</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
    <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
    <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
    <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
    <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   </Rule>
   <Rule TypeName="EnumeratorsShouldBeStronglyTyped" Category="Microsoft.Design" CheckId="CA1038">
    <Resolution Name="Default">{0} should provide a strongly typed implementation of IEnumerator.Current.</Resolution>
   </Rule>
   <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
    <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   </Rule>
   <Rule TypeName="ICollectionImplementationsHaveStronglyTypedMembers" Category="Microsoft.Design" CheckId="CA1035">
    <Resolution Name="Default">{0} should provide a strongly typed implementation of ICollection.CopyTo.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MethodTypeParameterMoreMeaningfulName">On method {0}, consider providing a more meaningful name than generic type parameter name {1}.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
    <Resolution Name="MethodTypeParameter">On method {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
    <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
    <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
    <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="ListsAreStronglyTyped" Category="Microsoft.Design" CheckId="CA1039">
    <Resolution Name="Default">{0} should provide a strongly typed implementation of IList.{1}.</Resolution>
   </Rule>
   <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
    <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a StringComparison. This should be replaced with a call to {2}.</Resolution>
   </Rule>
   <Rule TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058">
    <Resolution Name="System.Collections.ReadOnlyCollectionBase">Change the base type of {0} from {1} to its generic equivalent 'System.Collections.ObjectModel.ReadOnlyCollection'.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
