
   DESIGN OF A ROBUST FILE SYSTEM. AS PER DISCUSSIONS WITH GJC, PACE, AND DG.


PARTITION:

        AN OBJECT THAT IS MOUNTED AND DISMOUNTED. USE SI:MOUNT-DISK-PARTITION.
        YOU CAN THINK OF IT AS A LINEAR SEQUENCE OF BLOCKS ON DISK.

BLOCK:

        THE DATA IN THE PARTITION IS MADE UP OF EQUAL SIZED BLOCKS. A BLOCK MAY BE 1 OR MORE
        PAGES. THE BLOCK IS THE BASIC UNIT OF MANIPULATION.
        A BLOCK LOOKS SOMETHING LIKE THIS:

        [REFERENCE-COUNT]
        [CREATION-DATE]
        [CREATION-AUTHOR-ID]
        [REVISION-DATE]
        [REVISION-AUTHOR-ID]
        [FILE-ID]
        [FILE-NAME]
        [FILE-TYPE]
        [FILE-VERSION]
        [FILE-DATA-TYPE]
        [FILE-DATA-SEQUENCE-NUMBER]
        [FILE-DATA-SEQUENCE-LENGTH]
        ...DATA...


FILES:
        GIVEN A FILE-ID YOU CAN SCAN ALL THE BLOCKS IN A PARTITION AND
        FIND ALL BLOCKS THAT MAKE UP THAT FILE. IF YOU SORT THE BLOCKS
        BY FILE-DATA-SEQUENCE-NUMBER THEN YOU WILL HAVE YOUR FILE.


ALLOCATION:
        YOU CAN SCAN ALL THE BLOCKS TO FIND ONES THAT ARE FREE, MARK THEM RESERVED,
        THEN MARK THEM USED. WHEN A FILE IS DELETED YOU SCAN FOR ITS BLOCKS
        AND MARK THEM FREE. AS AN EFFICIENCY FEATURE YOU CAN ALSO HAVE A FILE AS
        A PAGE-USAGE-TABLE. THIS WOULD MAKE IT FASTER TO FIND FREE BLOCKS.

DIRECTORIES:
        AS AN OPTIMIZATION AND USER INTERFACE FEATURE YOU CAN HAVE SOME FILES
        CALLED DIRECTORIES. THESE HAVE PRETTIER NAMES FOR FILES AND ALSO
        GIVE A LIST OF BLOCKS IN THE FILE. THIS WAY YOU DONT NEED TO SCAN
        THE WHOLE PARTITION EVERYTIME YOU WANT TO OPEN A FILE.
